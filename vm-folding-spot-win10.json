{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "virtualMachineAdminUserName": {
            "type": "string",
            "metadata": {
                "parameterType": "Required",
                "description": [
                    "Administrator Username for the local admin account"
                ]
            }
        },
        "virtualMachineAdminPassword": {
            "type": "securestring",
            "metadata": {
                "parameterType": "Required",
                "description": [
                    "Administrator password for the local admin account."
                ]
            }
        },
        "virtualMachineNames": {
            "type": "array",
            "metadata": {
                "parameterType": "Required",
                "description": [
                    "Names of the virtual machines to be created"
                ]
            }
        },
        "virtualMachineSize": {
            "type": "string",
            "defaultValue": "Standard_NV4as_v4",
            "metadata": {
                "parameterType": "Required",
                "description": [
                    "Virtual Machine Size"
                ]
            }
        },
        "osDiskStorageType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "metadata": {
                "parameterType": "Required",
                "description": [
                    "Enter the required storage type for the OS disk"
                ]
            }
        },
        "operatingSystem": {
            "type": "string",
            "defaultValue": "rs5-pro-g2",
            "metadata": {
                "parameterType": "Required",
                "description": [
                    "The Windows version for the VM. This will pick a fully patched image of this given Windows version. Default is Windows 10 for GPU optimization."
                ]
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "parameterType": "Hidden",
                "description": [
                    "Location for all resources."
                ]
            }
        },
        "vNetName": {
            "type": "string",
            "minLength": 1,
            "metadata": {
                "parameterType": "Required",
                "description": [
                    "Name of the target Virtual Network"
                ]
            }
        },
        "vNetResourceGroup": {
            "type": "string",
            "minLength": 1,
            "metadata": {
                "parameterType": "Required",
                "description": [
                    "Name of the resource group containing the target Virtual Network"
                ]
            }
        },
        "subnetName": {
            "type": "string",
            "minLength": 1,
            "metadata": {
                "parameterType": "Required",
                "description": [
                    "Name of the target subnet"
                ]
            }
        },
        "diagStorageAccountName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "parameterType": "Optional",
                "description": [
                    "Name of an existing Storage Account to use for diagnostics logging."
                ]
            }
        },
        "additionalTags": {
            "type": "object",
            "defaultValue": {
            },
            "metadata": {
                "parameterType": "Optional",
                "description": [
                    "(Optional) Allows additional Tags to be added using a Parameter Object."
                ]
            }
        }
    },
    "variables": {
        "vNetId": "[resourceId(parameters('vNetResourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('vNetName'))]",
        "diagnosticStorageAccountName": "[if(empty(parameters('diagStorageAccountName')), concat('vmdiag', uniquestring(resourceGroup().name)), parameters('diagStorageAccountName'))]",
        "newDiagStorageAccount": "[if(empty(parameters('diagStorageAccountName')), 'true', 'false')]",
        "imageReference": {
            "publisher": "MicrosoftWindowsDesktop",
            "offer": "Windows-10",
            "sku": "[parameters('operatingSystem')]",
            "version": "latest"
        },
        "subnetRef": "[concat(variables('vNetId'), '/subnets/', parameters('subnetName'))]",
        "tags": "[if(contains(resourceGroup(), 'tags'), union(resourceGroup().tags, parameters('additionalTags')), parameters('additionalTags'))]"
    },
    "resources": [
        {
            "condition": "[bool(variables('newDiagStorageAccount'))]",
            "name": "[variables('diagnosticStorageAccountName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2016-01-01",
            "location": "[parameters('location')]",
            "tags": "[variables('tags')]",
            "sku": {
                "name": "Standard_LRS"
            },
            "dependsOn": [
            ],
            "kind": "Storage"
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[parameters('virtualMachineNames')[copyIndex('VMCopy')]]",
            "apiVersion": "2019-07-01",
            "location": "[parameters('location')]",
            "copy": {
                "name": "VMcopy",
                "count": "[length(parameters('virtualMachineNames'))]"
            },
            "tags": "[variables('tags')]",
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "imageReference": "[variables('imageReference')]",
                    "osDisk": {
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "[parameters('osDiskStorageType')]"
                        },
                        "caching": "ReadWrite"
                    }
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachineNames')[copyIndex('VMCopy')]]",
                    "adminUsername": "[parameters('virtualMachineAdminUserName')]",
                    "adminPassword": "[parameters('virtualMachineAdminPassword')]",
                    "windowsConfiguration": {
                        "provisionVMAgent": true
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('virtualMachineNames')[copyIndex('VMCopy')], '-NIC1'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('diagnosticStorageAccountName')), '2016-01-01').primaryEndpoints.blob]"
                    }
                },
                "priority": "Spot",
                "evictionPolicy": "Deallocate",
                "billingProfile": {
                    "maxPrice": 0.0499
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('diagnosticStorageAccountName'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('virtualMachineNames')[copyIndex('VMCopy')], '-NIC1'))]"
            ]
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(parameters('virtualMachineNames')[copyIndex('NICCopy')], '-NIC1')]",
            "apiVersion": "2016-03-30",
            "location": "[parameters('location')]",
            "copy": {
                "name": "NICCopy",
                "count": "[length(parameters('virtualMachineNames'))]"
            },
            "tags": "[variables('tags')]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(parameters('virtualMachineNames')[copyIndex('ExtCopy')],'/BGInfo')]",
            "apiVersion": "2018-04-01",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "ExtCopy",
                "count": "[length(parameters('virtualMachineNames'))]"
            },
            "properties": {
                "publisher": "Microsoft.Compute",
                "type": "BGInfo",
                "typeHandlerVersion": "2.1",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "Properties": [
                    ]
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines/', parameters('virtualMachineNames')[copyIndex('ExtCopy')])]"
            ]
        }
    ],
    "outputs": {
    }

}